#apiVersion: apps/v1
#kind: Deployment
#metadata:
#  name: app-deployment
#  labels:
#    app: app
#spec:
#  replicas: 3
#  selector:
#    matchLabels:
#      app: app
#  template:
#    metadata:
#      name: app
#      labels:
#        app: app
#    spec:
#      containers:
#        - name: app
#          image: search-movie-api
#          imagePullPolicy: IfNotPresent
#          env:
#            - name: ELASTIC_SEARCH_INDEX_NAME
#              valueFrom:
#                configMapKeyRef:
#                  name: app-config
#                  key: ELASTIC_SEARCH_INDEX_NAME
#
#          command: [ "/bin/bash" ]
#          args: ["-c", "python manage.py runserver"]
#          ports:
#            - containerPort: 8000
#
#---
#
#apiVersion: v1
#kind: Service
#metadata:
#  name: app
#spec:
#  type: NodePort
#  selector:
#    app: app
#  ports:
#    - port: 8000
#      targetPort: 8000

apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-server
spec:
  replicas: 3
  selector:
    matchLabels:
      app: api-server
  template:
    metadata:
      labels:
        app: api-server
    spec:
      containers:
        - name: api-server
          image: localhost:5000/search-movie-api:latest
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8000
          envFrom:
            - configMapRef:
                name: api-server-config
          command: [ "/bin/bash" ]
          args: [ "-c", "python manage.py runserver" ]

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: api-server-config
data:
  ELASTIC_SEARCH_HOSTS: "http://elasticsearch:9200"
  ELASTIC_SEARCH_INDEX_NAME: "movies"
  REDIS_HOST: "redis"
  REDIS_PORT: "6379"

---
apiVersion: v1
kind: Service
metadata:
  name: api-server
spec:
  selector:
    app: api-server
  ports:
    - protocol: TCP
      port: 8000
      targetPort: 8000
  type: NodePort
